__NUXT_JSONP__("/", (function(a,b,c,d,e,f,g,h){return {data:[{articles:[{_id:"5ce411cb9ae55c41e3feed98",meta:{createDate:"2019-05-21 22:57:15",updateDate:"2019-05-21 22:59:01"},tags:[b],title:"vue源码阅读之响应式原理",content:"\u003Cp\u003EVue 中对数据的响应式，即对 \u003Ccode\u003Eprops\u003C\u002Fcode\u003E、\u003Ccode\u003Edata\u003C\u002Fcode\u003E、\u003Ccode\u003Ecomputed\u003C\u002Fcode\u003E 的变化进行响应式更改。\u003C\u002Fp\u003E\n\u003Cp\u003E其入口是在 \u003Ccode\u003Esrc\u002Fcore\u002Finstance\u002Finit.js\u003C\u002Fcode\u003E 里的 \u003Ccode\u003EinitState(vm)\u003C\u002Fcode\u003E 里进行实现的。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EinitState(vm)\u003C\u002Fcode\u003E 里 初始化了 \u003Ccode\u003Eprops\u003C\u002Fcode\u003E, \u003Ccode\u003Emethods\u003C\u002Fcode\u003E, \u003Ccode\u003Edata\u003C\u002Fcode\u003E, \u003Ccode\u003Ecomputed\u003C\u002Fcode\u003E, \u003Ccode\u003Ewatch\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch3\u003EinitData\u003C\u002Fh3\u003E\n\u003Cp\u003E从 \u003Ccode\u003EinitData\u003C\u002Fcode\u003E 入手来看下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EinitData\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Evm\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Component\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E data \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edata\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 将_data作为中间变量，后续 proxy 里会用到\u003C\u002Fspan\u003E\n  data \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E data \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EgetData\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F getData 做了错误处理，并控制了 Dep.target，使得避免在获取 data 初始值的过程中意外地把依赖记录下来。\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E data \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 省略相关 warn 代码...\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 进行 data proxy methods 重复 key 的检验并抛出 warn msg\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F proxy data on instance\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E keys \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ekeys\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E props \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprops\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E methods \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emethods\n  \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E keys\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n  \u003Cspan class=\"token keyword\"\u003Ewhile\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei\u003Cspan class=\"token operator\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E key \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E keys\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 省略相关关于重复 key 检测 warn 代码\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对 _data 对象上的每个 key 进行 getter setter 设置\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 使得访问 this.xxx 代理到 this._data.xxx\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eproxy\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E_data\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F observe data\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F**\n   * 响应式核心方法\n   * 即 new Observer(value)\n   * 具体看 new Observer(value) 逻辑\n   * *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Eobserve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F* asRootData *\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003EinitData\u003C\u002Fcode\u003E 里首先将原始 data 复制了份 _data，然后遍历了每个 key，\n通过 \u003Ccode\u003Eproxy\u003C\u002Fcode\u003E 方法对 _data 里的 key 进行了 getter setter 设置。\u003C\u002Fp\u003E\n\u003Cp\u003E使得访问 this.xxx 代理到 this._data.xxx。\u003C\u002Fp\u003E\n\u003Cp\u003E接下来执行 \u003Ccode\u003Eobserve(data, true \u002F* asRootData *\u002F)\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E该方法结果是 \u003Ccode\u003Ereturn new Observer(value)\u003C\u002Fcode\u003E，返回了一个 \u003Ccode\u003EObserver\u003C\u002Fcode\u003E 实例。\u003C\u002Fp\u003E\n\u003Ch3\u003EObserver\u003C\u002Fh3\u003E\n\u003Cp\u003E来看下 \u003Ccode\u003EObserver\u003C\u002Fcode\u003E 类的定义，这也是响应式实现的主要地方。\u003C\u002Fp\u003E\n\u003Cdetails\u003E\n  \u003Csummary\u003Eclass Observer 源码\u003C\u002Fsummary\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EObserver\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  value\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E any\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  dep\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Dep\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  vmCount\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E number\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F number of vms that has this object as root $data\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Evalue\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E any\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E value\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDep\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EvmCount \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 __ob__ 属性，值为自身，即 this.data.__ob__ = this\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Edef\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'__ob__'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EArray\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对数组原生方法进行了劫持，使得push 等能监控到，来触发响应式，但无法监控到 通过下标更改的情况\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EhasProto\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003EprotoAugment\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E arrayMethods\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003EcopyAugment\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E arrayMethods\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E arrayKeys\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对数组进行遍历执行 observe\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EobserveArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 会进入 walk 方法\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ewalk\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F**\n   * Walk through each property and convert them into\n   * getter\u002Fsetters. This method should only be called when\n   * value type is Object.\n   *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ewalk\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eobj\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Object\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E keys \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ekeys\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E keys\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i\u003Cspan class=\"token operator\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 通过 defineReactive 方法，设置 getter setter, 真正的响应代码\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function\"\u003EdefineReactive\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E keys\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F**\n   * Observe a list of Array items.\n   *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EobserveArray\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eitems\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Array\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003Eany\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E l \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E items\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E l\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i\u003Cspan class=\"token operator\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function\"\u003Eobserve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eitems\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdetails\u003E\n\u003Cp\u003E\u003Ccode\u003EObserver\u003C\u002Fcode\u003E 在 new 的时候，主要逻辑会先执行 \u003Ccode\u003Ethis.dep = new Dep()\u003C\u002Fcode\u003E 来创建依赖实例，然后处理数组\u002F对象的情况。\u003C\u002Fp\u003E\n\u003Cp\u003E这中间还对里面的每个元素进行了深度遍历，使得每个元素均是响应式的。\u003C\u002Fp\u003E\n\u003Cp\u003E再主要来看 \u003Ccode\u003Ethis.walk(value)\u003C\u002Fcode\u003E 方法，该方法通过 \u003Ccode\u003EdefineReactive\u003C\u002Fcode\u003E 方法，设置 getter setter，这是真正的响应代码。\u003C\u002Fp\u003E\n\u003Cdetails\u003E\n  \u003Csummary\u003EdefineReactive 源码\u003C\u002Fsummary\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EdefineReactive\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token parameter\"\u003Eobj\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  key\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E string\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  val\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E any\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  customSetter\u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003EFunction\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  shallow\u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 缓存依赖\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E dep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDep\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E property \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetOwnPropertyDescriptor\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eproperty \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E property\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econfigurable \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F cater for pre-defined getter\u002Fsetters\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这里代码类比 computed 里属性定义的 getter setter 那样\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 定义了，就用定义的 getter setter 方法\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E property \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E property\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E setter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E property \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E property\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eset\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Egetter \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E setter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E arguments\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    val \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E obj\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F childObserve 对象，对 child 进行监听\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E childOb \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eshallow \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eobserve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eval\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EdefineProperty\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    enumerable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    configurable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这步主要收集依赖，并返回值\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function-variable function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EreactiveGetter\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 兼容使用定义的 getter 情况\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E val\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EchildOb\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          childOb\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EArray\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token function\"\u003EdependArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E value\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这步触发依赖并设置值\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function-variable function\"\u003Eset\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EreactiveSetter\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003EnewVal\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E val\n      \u003Cspan class=\"token comment\"\u003E\u002F* eslint-disable no-self-compare *\u002F\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EnewVal \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EnewVal \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E newVal \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E value\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F* eslint-enable no-self-compare *\u002F\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E customSetter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003EcustomSetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F #7981: for accessor properties without setter\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Egetter \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Esetter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 自己定义了 setter 就调用自己的 setter, 没有就直接赋值\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esetter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Esetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E newVal\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        val \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E newVal\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F newVal 是个 object，则继续递归执行监听 observe\u003C\u002Fspan\u003E\n      childOb \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eshallow \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eobserve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EnewVal\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 触发更新\u003C\u002Fspan\u003E\n      dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Enotify\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdetails\u003E\n\u003Cp\u003E\u003Ccode\u003EdefineReactive\u003C\u002Fcode\u003E 代码可以简化如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003E_defineReactive\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E val\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E dep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDep\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EdefineProperty\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    configurable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    enumerable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function-variable function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EreactiveGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EaddSub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E val\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function-variable function\"\u003Eset\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EreactiveSetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003EnewVal\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E val\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EnewVal \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E value\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 自己定义了 setter 就调用自己的 setter, 没有就直接赋值\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esetter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Esetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eobj\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E newVal\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        val \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E newVal\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Enotify\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在 \u003Ccode\u003EdefineReactive\u003C\u002Fcode\u003E 函数内，通过闭包实例化了 \u003Ccode\u003EDep\u003C\u002Fcode\u003E 这个订阅者。\u003C\u002Fp\u003E\n\u003Ch3\u003EDep\u003C\u002Fh3\u003E\n\u003Cdetails\u003E\n  \u003Csummary\u003Eclass Dep 源码\u003C\u002Fsummary\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDep\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Estatic\u003C\u002Fspan\u003E target\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003EWatcher\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  id\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E number\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  subs\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Array\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003EWatcher\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E uid\u003Cspan class=\"token operator\"\u003E++\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003EaddSub\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esub\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Watcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esub\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003EremoveSub\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esub\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Watcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eremove\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E sub\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F Dep.target 即 watcher：watcher.addDep(dep)\u003C\u002Fspan\u003E\n      Dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EaddDep\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token function\"\u003Enotify\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F stabilize the subscriber list first\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E subs \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Econfig\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Easync\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F subs aren't sorted in scheduler if not running async\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F we need to sort them now to make sure they fire in correct\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F order\u003C\u002Fspan\u003E\n      subs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Esort\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ea\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E b\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E a\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E b\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E l \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E subs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E l\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E i\u003Cspan class=\"token operator\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      subs\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eupdate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F the current target watcher being evaluated.\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F this is globally unique because there could be only one\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F watcher being evaluated at any time.\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 保存当前全局唯一存在的 watcher\u003C\u002Fspan\u003E\nDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E targetStack \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EpushTarget\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E_target\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003EWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E targetStack\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  Dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E _target\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EpopTarget\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E targetStack\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epop\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdetails\u003E\n\u003Cp\u003E\u003Ccode\u003EDep\u003C\u002Fcode\u003E 这里可以简化为：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDep\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EaddSub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esub\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Enotify\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esubs\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esub\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      sub\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eupdate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\nDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003EDep\u003C\u002Fcode\u003E 这个依赖订阅者，有自己的 \u003Ccode\u003Esubs\u003C\u002Fcode\u003E 用来缓存 \u003Ccode\u003EDep.target\u003C\u002Fcode\u003E，\u003Ccode\u003EDep.target\u003C\u002Fcode\u003E 其实是一个 watcher 实例，这里先不管 watcher。\n回到 \u003Ccode\u003EdefineReactive\u003C\u002Fcode\u003E，在 get 里将 watcher 实例添加到订阅者 Dep 里，\n在 set 时遍历缓存在 dep.subs 数组里的 watcher 实例，执行 \u003Ccode\u003Ewatcher.update()\u003C\u002Fcode\u003E 方法，来触发更新。\u003C\u002Fp\u003E\n\u003Ch3\u003EWatcher\u003C\u002Fh3\u003E\n\u003Cp\u003E来看下 class Watcher\u003C\u002Fp\u003E\n\u003Cdetails\u003E\n  \u003Csummary\u003Eclass Watcher 源码\u003C\u002Fsummary\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E  \u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EWatcher\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    vm\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Component\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 实例自身\u003C\u002Fspan\u003E\n    expression\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E string\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    cb\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Function\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    id\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E number\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    deep\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    user\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    lazy\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    sync\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    dirty\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    active\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    deps\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Array\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003EDep\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    newDeps\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Array\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003EDep\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    depIds\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E SimpleSet\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F ES6 set 类型\u003C\u002Fspan\u003E\n    newDepIds\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E SimpleSet\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F ES6 set 类型\u003C\u002Fspan\u003E\n    before\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003EFunction\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    getter\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Function\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n    value\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E any\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n      vm\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Component\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      expOrFn\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E string \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E Function\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 表达式本身 [ getter | noop ]\u003C\u002Fspan\u003E\n      cb\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Function\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F [ noop ]\u003C\u002Fspan\u003E\n      options\u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003EObject\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F { lazy: true } \u002F\u002F 如果设置为 true 则在第一次 get 的时候才计算值，初始化的时候并不计算。init 时为 true\u003C\u002Fspan\u003E\n      isRenderWatcher\u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E boolean\n    \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EisRenderWatcher\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_watcher \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_watchers\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F options\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeep\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esync \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esync\n        \u003Cspan class=\"token comment\"\u003E\u002F*\n        before作用是定义 beforeUpdate 钩子：\n        「\n          before () {\n              if (vm._isMounted) {\n                callHook(vm, 'beforeUpdate')\n              }\n            }\n          」\n        *\u002F\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ebefore \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ebefore\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esync \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecb \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E cb\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E++\u003C\u002Fspan\u003Euid \u003Cspan class=\"token comment\"\u003E\u002F\u002F uid for batching\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eactive \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirty \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy \u003Cspan class=\"token comment\"\u003E\u002F\u002F for lazy watchers\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 两个数组，\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDeps \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 两个id 为 set 实例,在 add 时候，防止重复添加相同 id\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EdepIds \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003ESet\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003ESet\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eexpression \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E process\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E expOrFn\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E''\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F parse expression for getter\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E expOrFn \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E expOrFn\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EparsePath\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EexpOrFn\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetter\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E noop\n          process\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ewarn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EFailed watching path: \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003EexpOrFn\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\" \u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token string\"\u003E'Watcher only accepts simple dot-delimited paths. '\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token string\"\u003E'For full control, use a function instead.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n            vm\n          \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy\n        \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eundefined\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Evaluate the getter, and re-collect dependencies.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 执行 getter, 并重新收集依赖关系\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F* pushTarget 代码：\n      「\n          Dep.target = null\n          const targetStack = []\n\n          export function pushTarget (_target: ?Watcher) {\n            if (Dep.target) targetStack.push(Dep.target)\n            Dep.target = _target\n          }\n\n          export function popTarget () {\n            Dep.target = targetStack.pop()\n          }\n        」\n      *\u002F\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这行代码作用：在进行 get 取值时，使得 Dep.target 为 watcher 实例自身\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function\"\u003EpushTarget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E value\n      \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E vm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\n      \u003Cspan class=\"token keyword\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        value \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Egetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ee\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token function\"\u003EhandleError\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ee\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003Egetter for watcher \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eexpression\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Ethrow\u003C\u002Fspan\u003E e\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efinally\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token comment\"\u003E\u002F\u002F \"touch\" every property so they are all tracked as\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token comment\"\u003E\u002F\u002F dependencies for deep watching\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeep\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token function\"\u003Etraverse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003EpopTarget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EcleanupDeps\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E value\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Add a dependency to this directive.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EaddDep\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Edep\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Dep\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E id \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F if (!this.newDepIds.has(id)) 判断，为了防止如 computed 里\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F `return this.a + this.a` 这种相同值的计算情况\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ehas\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eid\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eadd\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eid\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDeps\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edep\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EdepIds\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ehas\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eid\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EaddSub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Clean up for dependency collection.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EcleanupDeps\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n      \u003Cspan class=\"token keyword\"\u003Ewhile\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei\u003Cspan class=\"token operator\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E dep \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ehas\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eid\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          dep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EremoveSub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E tmp \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EdepIds\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EdepIds \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E tmp\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDepIds\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eclear\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      tmp \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDeps\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDeps \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E tmp\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnewDeps\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Subscriber interface.\n     * Will be called when a dependency changes.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eupdate\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F* istanbul ignore else *\u002F\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirty \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esync\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Erun\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003EqueueWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Scheduler job interface.\n     * Will be called by the scheduler.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Erun\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eactive\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E value \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n          value \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token comment\"\u003E\u002F\u002F Deep watchers and watchers on Object\u002FArrays should fire even\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token comment\"\u003E\u002F\u002F when the value is the same, because the value may\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token comment\"\u003E\u002F\u002F have mutated.\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token function\"\u003EisObject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evalue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeep\n        \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token comment\"\u003E\u002F\u002F set new value\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E oldValue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue\n          \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E value\n          \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token keyword\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n              \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecb\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E value\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E oldValue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ee\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n              \u003Cspan class=\"token function\"\u003EhandleError\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ee\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003Ecallback for watcher \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eexpression\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecb\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E value\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E oldValue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Evaluate the value of the watcher.\n     * This only gets called for lazy watchers.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eevaluate\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirty \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Depend on all deps collected by this watcher.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n      \u003Cspan class=\"token keyword\"\u003Ewhile\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei\u003Cspan class=\"token operator\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"token comment\"\u003E\u002F**\n     * Remove self from all dependencies' subscriber list.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eteardown\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eactive\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token comment\"\u003E\u002F\u002F remove self from vm's watcher list\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token comment\"\u003E\u002F\u002F this is a somewhat expensive operation so we skip it\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token comment\"\u003E\u002F\u002F if the vm is being destroyed.\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_isBeingDestroyed\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token function\"\u003Eremove\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_watchers\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n        \u003Cspan class=\"token keyword\"\u003Ewhile\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei\u003Cspan class=\"token operator\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edeps\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EremoveSub\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eactive \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdetails\u003E\n\u003Cp\u003E上面说到在 set 某个值的时候，实际上会执行 \u003Ccode\u003Ewatcher.update()\u003C\u002Fcode\u003E 方法。来看下这个 update 方法：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Eupdate\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F* istanbul ignore else *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirty \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esync\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Erun\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EqueueWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eupdate 方法，同步情况执行 \u003Ccode\u003Ethis.run()\u003C\u002Fcode\u003E ，一般情况是异步，会进入到最后个 else 里，执行 \u003Ccode\u003EqueueWatcher(this)\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EqueueWatcher\u003C\u002Fcode\u003E 里主要代码 \u003Ccode\u003EnextTick(flushSchedulerQueue)\u003C\u002Fcode\u003E，它将 watch 队列放到 nextTick 里统一执行，这也使得连续 set 同个数据两次不同值，不会更新两次视图，提升了一定性能。\u003C\u002Fp\u003E\n\u003Ch3\u003Ecomputed 的原理\u003C\u002Fh3\u003E\n\u003Cp\u003E注意 watcher 实例化 constructor 最后行有个 \u003Ccode\u003Ethis.value\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elazy\n  \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eundefined\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这个 value，在 \u003Ccode\u003EinitComputed\u003C\u002Fcode\u003E 的时候，会对 computed 里的每个 key \u003Ccode\u003Enew Watcher(...)\u003C\u002Fcode\u003E，所以可以说是 computed 的双向绑定实现即是通过 Watcher 来响应变化。\u003C\u002Fp\u003E\n\u003Cdetails\u003E\n  \u003Csummary\u003EinitComputed 源码函数：\u003C\u002Fsummary\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E computedWatcherOptions \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E lazy\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EinitComputed\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Evm\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Component\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E computed\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Object\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F $flow-disable-line\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E watchers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_computedWatchers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F computed properties are just getters during SSR\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E isSSR \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EisServerRendering\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 遍历定义在 computed 上的 key\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E key \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E computed\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E userDef \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E computed\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 处理自定义 getter 情况\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E userDef \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E userDef \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E userDef\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E getter \u003Cspan class=\"token operator\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function\"\u003Ewarn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EGetter is missing for computed property \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\".\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        vm\n      \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 非 ssr 情况，对 key 进行 监控，ssr 下就不需要监控了\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EisSSR\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F create internal watcher for the computed property.\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对每个key 设置 Watcher\u003C\u002Fspan\u003E\n      watchers\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n        vm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        getter \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E noop\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        noop\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        computedWatcherOptions\n      \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F component-defined computed properties are already defined on the\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F component prototype. We only need to define computed properties defined\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F at instantiation here.\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token comment\"\u003E\u002F\u002F 将 computed 里定义的 key 在实例上添加进行代理，使得可直接通过 this.xx 来访问\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function\"\u003EdefineComputed\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E userDef\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$data\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ewarn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EThe computed property \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\" is already defined in data.\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Evm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprops \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E key \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprops\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ewarn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EThe computed property \"\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\" is already defined as a prop.\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E vm\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdetails\u003E\n\u003Cp\u003E从上面传入参数 \u003Ccode\u003E{ lazy: true }\u003C\u002Fcode\u003E 可知，初始化时 value 为 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E，\n\u003Ccode\u003EdefineComputed(vm, key, userDef)\u003C\u002Fcode\u003E 即 \u003Ccode\u003EObject.defineProperty(target, key, sharedPropertyDefinition)\u003C\u002Fcode\u003E.\n在 \u003Ccode\u003EsharedPropertyDefinition\u003C\u002Fcode\u003E 里会拿之前 watcher 过的依赖的值：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcreateComputedGetter\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EcomputedGetter\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E watcher \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_computedWatchers \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_computedWatchers\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ewatcher\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ewatcher\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirty\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        watcher\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eevaluate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EDep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etarget\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        watcher\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edepend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E watcher\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Evalue\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E所以 computed 中的值在读取的时候，拿到的结果即 watcher.value。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E总结下 data 响应式流程：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Ethis.xx 代理到 this._data.xx 然后 _data 在 Observer 里定义过 setter getter，在初始 render 时会收集依赖到闭包的 Dep 依赖实例的数组里，在 setter 时会通知所有依赖即每个 watcher 实例进行 update 更新。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E总结下 computed 响应式流程：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Ethis.xx 初始化时会先创建一个 watcher，然后通过 \u003Ccode\u003EObject.defineProperty\u003C\u002Fcode\u003E 进行 setter,getter 设置，其中 getter 会得到是 watcher.value 的值。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E注意：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EObserver 文件下定义了个 \u003Ccode\u003EarrayMethods\u003C\u002Fcode\u003E，该方法重写了数组方法，使得改变 push 等操作也能触发更新。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003EmethodsToPatch\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emethod\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F cache original method\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E original \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E arrayProto\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Emethod\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Edef\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EarrayMethods\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E method\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Emutator\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E\u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003Eargs\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E result \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eoriginal\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eapply\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E ob \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E__ob__\n    \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E inserted\n    \u003Cspan class=\"token keyword\"\u003Eswitch\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emethod\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'push'\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'unshift'\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E\n        inserted \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E args\n        \u003Cspan class=\"token keyword\"\u003Ebreak\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'splice'\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E\n        inserted \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E args\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ebreak\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Einserted\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E ob\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EobserveArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Einserted\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F notify change\u003C\u002Fspan\u003E\n    ob\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edep\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Enotify\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E result\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E附：\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ftanxchen\u002Fknowledge-note\u002Fblob\u002Fmaster\u002F%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6\u002Fvuejs\u002Fmvvm.html#L1-L137\"\u003E实现vue精简版响应式代码\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",__v:a},{_id:"5cdd790c9ae55c41e3feed97",meta:{createDate:c,updateDate:c},tags:[b],title:"vue源码阅读之初始化过程",content:"\u003Ch3\u003Eimport阶段\u003C\u002Fh3\u003E\n\u003Cp\u003E从打包入口文件入手，\u003Ccode\u003Escripts\u002Fconfig.js\u003C\u002Fcode\u003E, ➡️ \u003Ccode\u003Eresolve('web\u002Fentry-runtime.js')\u003C\u002Fcode\u003E\n⤵️\n入口文件 \u003Ccode\u003Esrc\u002Fplatforms\u002Fentry-runtime.js\u003C\u002Fcode\u003E, \u003Ccode\u003Eplatforms\u003C\u002Fcode\u003E 文件夹是跟平台相关的代码\n⤵️\n\u003Ccode\u003Esrc\u002Fplatforms\u002Fweb\u002Fruntime\u002Findex.js\u003C\u002Fcode\u003E，\u003Ccode\u003Eruntime\u002Findex.js\u003C\u002Fcode\u003E 里对该运行时代码做了特殊处理\n⤵️\n\u003Ccode\u003Esrc\u002Fcode\u002Findex.js\u003C\u002Fcode\u003E,真正入口文件\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"token keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'.\u002Finstance\u002Findex'\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinitGlobalAPI\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...ssr相关代码\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eversion \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'__VERSION__'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E Vue\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E⤵️\n\u003Ccode\u003Esrc\u002Fcore\u002Finstance\u002Findex.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EVue\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eoptions\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003E_init\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 _init 函数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinitMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 主要是添加了 $data,$props,$watch,$set,$delete 几个属性和方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EstateMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 主要是添加了 $on,$off,$once,$emit 三个方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EeventsMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 主要添加了 _update, $forceUpdate, $destroy 三个方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003ElifecycleMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 主要添加了 $nextTick 和 _render 两个方法以及一大堆renderHelpers\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003ErenderMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E Vue\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003Einstance\u002Findex.js\u003C\u002Fcode\u003E 作用是按功能模块往 \u003Ccode\u003EVue\u003C\u002Fcode\u003E 原型和自身添加了许多属性和方法。\n再回到 \u003Ccode\u003EinitGlobalAPI(Vue)\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 一般使用的是实例里的方法\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eset \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eset\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edelete \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E del\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnextTick \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E nextTick\n\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eoptions \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 循环出来的结果其实是三个 `components`,`directives`, `filters`\u003C\u002Fspan\u003E\n\u003Cspan class=\"token constant\"\u003EASSET_TYPES\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E's'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F this is used to identify the \"base\" constructor to extend all plain-object\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F components with in Weex's multi-instance scenarios.\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_base \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Vue\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F builtInComponents 仅为内置组件 KeepAlive\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003Eextend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecomponents\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E builtInComponents\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token function\"\u003EinitUse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 Vue.use\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinitMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 Vue.mixin\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinitExtend\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 Vue.extend\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加 Vue.component, Vue.directive, Vue.filter 方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinitAssetRegisters\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003EinitGlobalAPI\u003C\u002Fcode\u003E 作用也是继续添加了一些全局方法。\n现在 function Vue 大致就变成了如下样子：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F构造函数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EVue\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003E_init\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F全局config对象，我们几乎不会用到\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econfig \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  keyCodes\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  _lifecycleHooks\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'beforeCreate'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'created'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 默认的options配置，我们每个组件都会继承这个配置。\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eoptions \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  beforeCreate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 比如 vue-router 就会注册这个回调，因此会每一个组件继承\u003C\u002Fspan\u003E\n  components\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 前面提到了，默认组件有三个 `KeepAlive`,`transition`, `transitionGroup`，这里注册的组件就是全局组件，因为任何一个组件中不用声明就能用了。所以全局组件的原理就是这么简单\u003C\u002Fspan\u003E\n  directives\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 默认只有 `v-show` 和 `v-model`\u003C\u002Fspan\u003E\n  filters\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F一些全局方法\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euse \u003Cspan class=\"token comment\"\u003E\u002F\u002F 注册插件\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecomponent \u003Cspan class=\"token comment\"\u003E\u002F\u002F 注册组件\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edirective \u003Cspan class=\"token comment\"\u003E\u002F\u002F 注册指令\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EnextTick \u003Cspan class=\"token comment\"\u003E\u002F\u002F下一个tick执行函数\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eset\u003Cspan class=\"token operator\"\u003E\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Edelete\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 数据的修改操作\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emixin \u003Cspan class=\"token comment\"\u003E\u002F\u002F 混入mixin用的\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002FVue.prototype 上有几种不同作用的方法\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F由initMixin 添加的 `_init` 方法，是Vue实例初始化的入口方法，会调用其他的功能初始话函数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_init\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 由 initState 添加的三个用来进行数据操作的方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$data\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$props\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$watch\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$set\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$\u003Cspan class=\"token keyword\"\u003Edelete\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 由initEvents添加的事件方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$on\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$off\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$one\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$emit\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 由 lifecycle添加的生命周期相关的方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_update\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$forceUpdate\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$destroy\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F在 platform 中添加的生命周期方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$mount\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 由renderMixin添加的`$nextTick` 和 `_render` 以及一堆renderHelper\u003C\u002Fspan\u003E\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$nextTick\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_render\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_b\n\u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eprototype\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_e\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F...\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003E实例化阶段[new Vue({…})]\u003C\u002Fh3\u003E\n\u003Cp\u003E代码在 \u003Ccode\u003Esrc\u002Fcore\u002Finstance\u002Finit.js\u003C\u002Fcode\u003E 里。\n主要功能代码：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E生成自增的唯一ID标识 \u003Ccode\u003Evm._uid = uid++\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E合并 \u003Ccode\u003Evm.constructor\u003C\u002Fcode\u003E 和传入的 \u003Ccode\u003Eoptions\u003C\u002Fcode\u003E，生成 \u003Ccode\u003Evm.$options\u003C\u002Fcode\u003E\n\u003Cul\u003E\n\u003Cli\u003E这一步使得可以在子组件能够使用全局的 directives、filters 等方法\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E挂载自身 \u003Ccode\u003Evm._self = vm\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E初始化生命周期、事件、渲染等相关钩子工作\n\u003Cul\u003E\n\u003Cli\u003EinitLifecycle(vm)\n\u003Cul\u003E\n\u003Cli\u003E定位第一个非抽象父级，并添加到 $children 里，\u003Ccode\u003Eparent.$children.push(vm)\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E添加很多变量，主要为 $parent、$children，$refs 也在这里定义了，其他 \u003Ccode\u003E_\u003C\u002Fcode\u003E开头的变量均为\b生命周期不同阶段状态的 flag\n\u003Cul\u003E\n\u003Cli\u003Evm.$parent = parent\u003C\u002Fli\u003E\n\u003Cli\u003Evm.$root = parent ? parent.$root : vm\u003C\u002Fli\u003E\n\u003Cli\u003Evm.$children = []\u003C\u002Fli\u003E\n\u003Cli\u003Evm.$refs = {}\u003C\u002Fli\u003E\n\u003Cli\u003Evm._watcher = null\u003C\u002Fli\u003E\n\u003Cli\u003Evm._inactive = null\u003C\u002Fli\u003E\n\u003Cli\u003Evm._directInactive = false\u003C\u002Fli\u003E\n\u003Cli\u003Evm._isMounted = false\u003C\u002Fli\u003E\n\u003Cli\u003Evm._isDestroyed = false\u003C\u002Fli\u003E\n\u003Cli\u003Evm._isBeingDestroyed = false\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EinitEvents(vm)\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003E注册的是父组件事件\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EinitRender(vm)\n\u003Cul\u003E\n\u003Cli\u003E做 render 的准备工作，并未开始 render，如创建 vm._vnode，vm.$createElement，$attrs 和 $listeners\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EcallHook(vm, ‘beforeCreate’)\n\u003Cul\u003E\n\u003Cli\u003E调用 \u003Ccode\u003EbeforeCreate\u003C\u002Fcode\u003E 生命周期钩子\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EcallHook 里定义了：\u003Ccode\u003Eif (vm._hasHookEvent) {vm.$emit('hook:' + hook)}\u003C\u002Fcode\u003E，所以有个小技巧实现在在父组件通过 \u003Ccode\u003Ehook\u003C\u002Fcode\u003E 钩子，监听子组件生命周期方法:\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre class=\"language-html\"\u003E\u003Ccode\u003E  \u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token punctuation\"\u003E&lt;\u003C\u002Fspan\u003EChind-Component\u003C\u002Fspan\u003E \u003Cspan class=\"token attr-name\"\u003E\u003Cspan class=\"token namespace\"\u003E@hook:\u003C\u002Fspan\u003Eupdated\u003C\u002Fspan\u003E\u003Cspan class=\"token attr-value\"\u003E\u003Cspan class=\"token punctuation attr-equals\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E\"\u003C\u002Fspan\u003EdoSomething\u003Cspan class=\"token punctuation\"\u003E\"\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u002F\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EinitInjections(vm) \u002F\u002F resolve injections before data\u002Fprops\u003C\u002Fli\u003E\n\u003Cli\u003EinitState(vm)\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Edata\u003C\u002Fcode\u003E, \u003Ccode\u003Eprops\u003C\u002Fcode\u003E, \u003Ccode\u003Ecomputed\u003C\u002Fcode\u003E 等都是在这里初始化的，常见的面试考点比如\u003Ccode\u003EVue是如何实现数据响应化的\u003C\u002Fcode\u003E 答案就在这个函数中寻找\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EinitProvide(vm) \u002F\u002F resolve provide after data\u002Fprops\u003C\u002Fli\u003E\n\u003Cli\u003EcallHook(vm, ‘created’)\n\u003Cul\u003E\n\u003Cli\u003E调用 \u003Ccode\u003Ecreated\u003C\u002Fcode\u003E 生命周期钩子\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E存在 el ,则调用 \u003Ccode\u003E$mount\u003C\u002Fcode\u003E，\u003Ccode\u003Evm.$mount(vm.$options.el)\u003C\u002Fcode\u003E\n\u003Cul\u003E\n\u003Cli\u003E当然，el 也可以不写，而是在实例化的时候直接调用： \u003Ccode\u003Enew Vue({...}).$mount('#app')\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",__v:a},{_id:"5cda85489ae55c41e3feed96",meta:{createDate:"2019-05-14 17:07:20",updateDate:"2019-05-14 17:23:12"},tags:["nodejs"],title:"koa中间件原理",content:"\u003Cp\u003Ekoa 功能\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E封装 http 模块【lib\u002Fapplication 下的 listen 方法】\u003C\u002Fli\u003E\n\u003Cli\u003E构建中间件模型【通过 koa-compose 包】\u003C\u002Fli\u003E\n\u003Cli\u003E整合了request,response,context【lib\u002Fapplication 下的 createContext 方法】\u003C\u002Fli\u003E\n\u003Cli\u003E错误处理【lib\u002Fapplication 下的 onerror 方法】\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E一个基础模板代码如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E Koa \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Erequire\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'koa'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E app \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EKoa\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F logger\u003C\u002Fspan\u003E\napp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Euse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ectx\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E next\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Enext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E rt \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E ctx\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eresponse\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'X-Response-Time'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ectx\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emethod\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ectx\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eurl\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E - \u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ert\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F x-response-time\u003C\u002Fspan\u003E\napp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Euse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ectx\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E next\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E start \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Date\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Enow\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Enext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E ms \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Date\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Enow\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E start\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  ctx\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eset\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'X-Response-Time'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token template-string\"\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E${\u003C\u002Fspan\u003Ems\u003Cspan class=\"token interpolation-punctuation punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003Ems\u003C\u002Fspan\u003E\u003Cspan class=\"token template-punctuation string\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F response\u003C\u002Fspan\u003E\napp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Euse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter\"\u003Ectx\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  ctx\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ebody \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'Hello World'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\napp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E3000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Ekoa 里，中间件函数接收两个参数 context, next，\n通过 use 方法，将函数添加到 \u003Ccode\u003Emiddleware\u003C\u002Fcode\u003E 数组里【 \u003Ccode\u003Ethis.middleware.push(fn)\u003C\u002Fcode\u003E 】，\n在 listen 里\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Ehttp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EcreateServer\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecallback\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003Eargs\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E调用了 \u003Ccode\u003Ecallback\u003C\u002Fcode\u003E，在 \u003Ccode\u003Ecallback\u003C\u002Fcode\u003E 里，通过 \u003Ccode\u003Ecompose(this.middleware)\u003C\u002Fcode\u003E，\n处理之前添加过的中间件，返回 \u003Ccode\u003Ethis.handleRequest(ctx, fn)\u003C\u002Fcode\u003E 来执行中间件，\n\u003Ccode\u003EhandleRequest\u003C\u002Fcode\u003E 是返回 Promise 函数的，所以在编写中间件时，往往通过 async await 来构建，这里主要来解析下 \u003Ccode\u003Ecompose\u003C\u002Fcode\u003E，它是引用了 \u003Ccode\u003Ekoa-compose\u003C\u002Fcode\u003E 包，主要源码如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ecompose\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Econtext\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E next\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F last called middleware\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E index \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Edispatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Edispatch\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei \u003Cspan class=\"token operator\"\u003E&lt;=\u003C\u002Fspan\u003E index\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ereject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EError\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'next() called multiple times'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      index \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E i\n      \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E fn \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E middleware\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ei \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E middleware\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E fn \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E next\n      \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Efn\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Efn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Econtext\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Edispatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ebind\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E i \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ereject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Ecompose 里会返回 dispatch 方法，dispatch 里会先执行第一个fn，并将 middleware 队列里下一个 fn 作为 next 参数，且 dispatch 返回的为 Promise，从而形成了先进后出洋葱式模型。\n\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fkoa-middleware.jpg\" alt=\"koa-middleware\"\u003E\u003C\u002Fp\u003E\n",__v:a},{_id:"5ccff6409ae55c41e3feed95",meta:{createDate:d,updateDate:d},tags:[b],title:"Vuex源码分析",content:"\u003Cp\u003EVuex是Vue的数据状态管理插件.将数据放在单例下的store里，对数据进行监控管理.\u003C\u002Fp\u003E\n\u003Ch3\u003E引入、安装阶段，从入口 index.js开始\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Store\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  install\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  version\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'__VERSION__'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapMutations\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapGetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapActions\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  createNamespacedHelpers\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E导出了 Store 类和一些辅助map开头的函数。\n最初在项目里使用Vuex时，\u003Ccode\u003EVue.use(Vuex)\u003C\u002Fcode\u003E里便是调用了\u003Ccode\u003Einstall\u003C\u002Fcode\u003E方法。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E Vue\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始install阶段，Vue.use(Vuex)会调用install方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Einstall\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E_Vue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F Vue为store里定义，_Vue为调用install时传入的Vue\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 防止重复install\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E _Vue \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E Vue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token string\"\u003E'[vuex] already installed. Vue.use(Vuex) should be called only once.'\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  Vue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E _Vue\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F applyMixin函数作用：将store注入到子组件，子组件可通过this.$store访问store\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EapplyMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Estore.js里导出了\u003Ccode\u003Einstall\u003C\u002Fcode\u003E方法。在store.js开头定义局部 Vue 变量，用于判断是否已经装载和减少全局作用域查找。\n这里调用\u003Ccode\u003EapplyMixin\u003C\u002Fcode\u003E方法，它将store注入到子组件，子组件可通过this.$store访问store\n\u003Ccode\u003E\u002F\u002F applyMixin.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eversion \u003Cspan class=\"token operator\"\u003E\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Emixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E beforeCreate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E vuexInit \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EapplyMixin里对 vue 1.0 和 2.0 版本进行了判断，2.0下在\u003Ccode\u003EbeforeCreate\u003C\u002Fcode\u003E阶段注入\u003Ccode\u003Estore\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 子组件可以通过this.$store来访问store\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EvuexInit\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E options \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 注入store\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始时，在根组件上，调用者会传入store，所以会进入if逻辑\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F options上的store可以为 function，\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这类似于 vue 里的 data return 的是个 function，防止多个 store下，里面的数据被共享\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Estore\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 在子组件上，初始化时未传入store，则从父组件中获取store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 公用了一份初始根组件时传入的全局的store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003Enew Store实例化阶段\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E  \u003Cspan class=\"token comment\"\u003E\u002F\u002F plugins为外部传入的插件\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F strict为默认不开启严格模式（严格模式：只能在mutation里进行数据更改，在action等其他位置进行数据更改会抛出错误）\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    plugins \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    strict \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 定义store 内部状态\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 用于判断是否在commit环节的flag，保证只在mutation环境改变state\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_committing \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F actions操作对象\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 发布订阅模式下的订阅函数集合\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actionSubscribers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F mutations操作对象\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 封装后的getters集合对象\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_wrappedGetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F**\n   * 格式化 options，也是该源码阅读的核心重点，\n   * 在非模块模式（普通用法传入options）或 在按模块开发方式传入store时，存储处理过的modules\n   * this._modules = {\n   *   root: {\n   *     context: {dispatch: ƒ, commit: ƒ},\n   *     runtime: false,\n   *     state: {…},\n   *     _children: {},\n   *     _rawModule: {state: {…}, actions: {…}, mutations: {…}, plugins: Array(1)},\n   *     namespaced: false\n   *   },\n   *   __proto__: {\n   *    get: ƒ (path)\n   *    getNamespace: ƒ getNamespace(path)\n   *    register: ƒ register(path, rawModule, runtime)\n   *    unregister: ƒ unregister(path)\n   *    update: ƒ update$1(rawRootModule)\n   *    constructor: ƒ ModuleCollection(rawRootModule)\n   *    __proto__: {...}\n   *   }\n   * }\n   *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModuleCollection\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 模块命名空间map\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modulesNamespaceMap \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 发布订阅模式下的订阅函数集合\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_subscribers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F vue实例，用到watch监视变化功能\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_watcherVM \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F initialize the store vm, which is responsible for the reactivity\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F (also registers _wrappedGetters as computed properties)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EresetStoreVM\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 调用传入的各种插件\u003C\u002Fspan\u003E\n  plugins\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eplugin\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eplugin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E useDevtools \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eundefined\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econfig\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EuseDevtools\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EdevtoolPlugin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在 \u003Ccode\u003Econstructor\u003C\u002Fcode\u003E 里主要操作为： 格式化modules，安装 module，初始化 store vm, 安装 plugins\u003C\u002Fp\u003E\n\u003Ch3\u003E格式化modules，即 \u003Ccode\u003Ethis._modules = new ModuleCollection(options)\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cp\u003E由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\u003C\u002Fp\u003E\n\u003Cp\u003E为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。\n每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleA \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  actions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  getters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleB \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  actions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVuex\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EStore\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  modules\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    a\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E moduleA\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    b\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E moduleB\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E代码被分割到 \u003Ccode\u003E.\u002Fmodule\u002Fmodule-collection\u003C\u002Fcode\u003E 文件夹下。\n初始化时，执行 \u003Ccode\u003Eregister\u003C\u002Fcode\u003E 方法\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawRootModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eregister 接收3个参数\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epath：路径，模块tree的路径\u003C\u002Fli\u003E\n\u003Cli\u003ErawModule：最初 \u003Ccode\u003Enew Store\u003C\u002Fcode\u003E 时传入的 \u003Ccode\u003Eoptions\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eruntime：是否是运行时创建的模块,在初始化根模块时为 false， 其他情况为 true，理解为 初始化时的 flag\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E如初始化 register 时，参数为：\u003Ccode\u003Epath: [], rawModule: options, runtime: false\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epath\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F path: [], rawModule: options, runtime: false\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对构造器传入的options的getters、mutations、actions进行dev环境的格式校验\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 非预期的格式会抛出错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EassertRawModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始化module\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E newModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 第一次初始化时，执行if代码块，path为[]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E newModule\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 获取当前module的parent\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E parent \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加child\u003C\u002Fspan\u003E\n    parent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EaddChild\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E newModule\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 递归注册嵌套的module\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emodules\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emodules\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003ErawChildModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Econcat\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawChildModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eregister 里的逻辑大致为\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E校验传入的options格式，非预期的格式会抛出错误\u003C\u002Fli\u003E\n\u003Cli\u003E实例化 \u003Ccode\u003EModule\u003C\u002Fcode\u003E，初始化时 模块 tree 的根即为 root，之后 addChild 添加的子模块 即会放入到 root._children 里，逐级对包含的所以模块进行递归 register，以形式 模块 tree\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eroot格式如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Eroot\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  context\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Edispatch\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E ƒ\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E commit\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E ƒ\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  runtime\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  _children\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  _rawModule\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Estate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E actions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E plugins\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  namespaced\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003E初始化module\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始化module\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E newModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EModule 定义在 \u003Ccode\u003E.\u002Fmodule\u002Fmodule.js\u003C\u002Fcode\u003E 里\u003C\u002Fp\u003E\n\u003Cp\u003E构造函数：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F rawModule: options, runtime: false\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eruntime \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E runtime\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储module子项\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_children \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储初始化时传入的原始options\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E rawModule\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E rawState \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 兼容module形式里state传入函数形式，类似 组件中的 data，总是return 一个Object，来防止对象被共享\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E rawState \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErawState\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E rawState\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E屡下 模块初始化 思路：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E对初始传入的 options 进行模块 实例化，\u003C\u002Fli\u003E\n\u003Cli\u003E里面包含了子模块的话 会被递归 放进 root._children 对象里，形成一颗 模块 tree，\u003C\u002Fli\u003E\n\u003Cli\u003E并且 通过 \u003Ccode\u003EforEachMutation\u003C\u002Fcode\u003E 包装函数等的类似方法，子模块在执行 action、mutation 方法时也只是执行的是子模块里对应的方法，\u003C\u002Fli\u003E\n\u003Cli\u003E每个模块的 _rawModule 即为 定义时 传入的 options\u003C\u002Fli\u003E\n\u003Cli\u003E每个模块的 state 即为 定义时 传入的 options.state\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E安装模块\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在模块被初始化定义后，通过 installModule 对 state, actions, mutations, getters 进行初始化处理。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F this, state(this._modules.root.state), [], this._modules.root\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 是root时，path为[]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E isRoot \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F  modules: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     a: moduleA,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     b: moduleB\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F   }\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F modules.a 的命名空间为 'a\u002F'\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetNamespace\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储namespace对应的module于_modulesNamespaceMap\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Enamespaced\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modulesNamespaceMap\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Enamespace\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E module\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 设置 state\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EisRoot \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Ehot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E parentState \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EgetNestedState\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleName \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n    store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003E_withCommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eset\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EparentState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E moduleName\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E local \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econtext \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EmakeLocalContext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespace\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 拼接namespace，如：\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F modules: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F   account: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     namespaced: true,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     state: { ... }, \u002F\u002F 模块内的状态已经是嵌套的了，使用 `namespaced` 属性不会对其产生影响\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     getters: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F       isAdmin () { ... } \u002F\u002F -\u003E getters['account\u002FisAdmin']\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     },\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     actions: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F       login () { ... } \u002F\u002F -\u003E dispatch('account\u002Flogin')\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     },\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     mutations: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F       login () { ... } \u002F\u002F -\u003E commit('account\u002Flogin')\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     }\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F   }\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F }\u003C\u002Fspan\u003E\n  module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n    \u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachAction\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eaction\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E type \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E action\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E key \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E action\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ehandler \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E action\n    \u003Cspan class=\"token function\"\u003EregisterAction\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Egetter\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n    \u003Cspan class=\"token function\"\u003EregisterGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E getter\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 递归install子项\u003C\u002Fspan\u003E\n  module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachChild\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Echild\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Econcat\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E child\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003E分析下 registerMutation 的注册\u003C\u002Fh4\u003E\n\u003Cp\u003E在这里先通过 forEachMutation 方法, 传入对应的模块的 mutation 和 key，\nregisterMutation 里将我们项目里定义的 mutations 方法以 key-value 形式存入 _mutations 里，在传入的时候 将 state 作为第一参数，我们自己传入的为第二参数形式，这里使得如文档里所说一样形式使用：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\nmutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Eincrement\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    state\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecount \u003Cspan class=\"token operator\"\u003E+=\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eamount\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这里会对命名空间进行处理，假如模块 A 中有名为 add 的 mutation 函数，那么在注册过程中会变成 a\u002Fadd\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E相关 Mutation 注册代码：\n-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n  \u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Efn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emutations\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emutations\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E fn\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E entry \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  entry\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EwrappedMutationHandler\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\u003C\u002Fp\u003E\n\u003Ch4\u003EregisterAction 的注册\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EregisterAction\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E entry \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  entry\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EwrappedActionHandler\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epayload\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E cb\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E res \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      dispatch\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edispatch\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      commit\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecommit\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      getters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      rootGetters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      rootState\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E cb\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisPromise\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eres\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      res \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eres\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_devtoolHook\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_devtoolHook\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eemit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'vuex:error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethrow\u003C\u002Fspan\u003E err\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E res\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这里将 \u003Ccode\u003E{ dispatch commit getters state rootGetters rootState }\u003C\u002Fcode\u003E 作为第一参数，将自己dispatch 时传入的参数作为第二参数，所以有了文档里所说的书写形式：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 自己项目里的 actions.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EtoggleMenu\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E commit \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'TOGGLE_MENU'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F or\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EsetSidebarMenuList\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Econtext\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E userType\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  context\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'SET_SIDEBAR_MENU_LIST'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E userType\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EregisterAction 里 处理了 promise 情况，所以 store.dispatch 可以处理被触发的 action 的处理函数返回的 Promise，并且 store.dispatch 仍旧返回 Promise\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E所以我们可以这么来写：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Elogin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Ecommit\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E user\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EPromise\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eresolve\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E reject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_request'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eaxios\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Eurl\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'...'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E data\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E user\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E method\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'POST'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eresp\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E token \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E resp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etoken\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E user \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E resp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser\n        localStorage\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EsetItem\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'token'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E token\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        axios\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edefaults\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eheaders\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecommon\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Authorization'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E token\n        \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_success'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E token\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E user\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eresp\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        localStorage\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EremoveItem\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'token'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ereject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  methods\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edispatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'register'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        name\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ename\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        password\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Epassword\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$router\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'\u002F'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E将处理的请求提取到了vuex里，也使得页面里代码更加简洁了。只保留了业务逻辑。\u003C\u002Fp\u003E\n\u003Ch4\u003EregisterGetter 的注册\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErawGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n  local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F local state\u003C\u002Fspan\u003E\n  local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F local getters\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F root state\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters \u003Cspan class=\"token comment\"\u003E\u002F\u002F root getters\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Egetter 这里先处理了命名空间，然后这里接收 4 个参数。\n前面两个为模块内的 local state ，local getters，后两个参数为根节点上的内容 root state，root getters。\n当然，没使用模块形式的话，两者相同。\u003C\u002Fp\u003E\n\u003Ch3\u003EresetStoreVM(this, state)\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EresetStoreVM\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E oldVm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F bind store public getters\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E wrappedGetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_wrappedGetters\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E computed \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EwrappedGetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Efn\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F use computed to leverage its lazy-caching mechanism\u003C\u002Fspan\u003E\n    computed\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Efn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EdefineProperty\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token function-variable function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      enumerable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F for local getters\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    data\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      $$state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E state\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    computed\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EresetStoreVM 的工作是 实例化一个 vue 实例，并将 getters 里定义的方法 通过 Object.defineProperty 来进行绑定到 store.getters 上，\n并作为 computed 计算属性，在state变化时，getter 能响应式变化。\n在实际调用 即为如下关系：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 这里使得vm.$store.state 取到 vm._data.$$state\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eget\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Estate\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EVuex 还有一些map开头的辅助函数，这些 handler 通过 hook 达到了简写的目的。\nVuex 本身是 Vue 的插件形式，其自身继续延续支持插件形式。\u003Ccode\u003EreplaceState\u003C\u002Fcode\u003E,\u003Ccode\u003Esubscribe\u003C\u002Fcode\u003E通常会在插件里用到。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Esubscribe\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emutation\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emutation\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Epayload\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",__v:a},{_id:"5c4b2ef6425f444b816c7a18",meta:{createDate:"2019-01-25 23:44:55",updateDate:"2019-05-05 17:43:35"},tags:[e],title:"浏览器相关知识点",content:"\u003Ch3\u003E浏览器输入url到看到页面\b的流程\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003EDNS解析\n\u003Cul\u003E\n\u003Cli\u003EDNS服务器对域名解析，得到目标服务器的IP后，进行HTTP访问\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E应用层【HTTP数据】\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E传输层【TCP协议：确保可靠性】\n\u003Cul\u003E\n\u003Cli\u003E为了传输方便，在传输层（TCP 协议）把从应用层处收到的数据（HTTP 请求报文）进行分割，并在各个报文上打上标记序号及端口号后转发给网络层。\u003C\u002Fli\u003E\n\u003Cli\u003E三次握手🤝\n\u003Cul\u003E\n\u003Cli\u003E握手过程中使用了TCP的标志 [flag] —— SYN [synchronize] 和 ACK [acknowledgement]\n\u003Cul\u003E\n\u003Cli\u003E\b发送端首先发送一个带 SYN 标志的数据包给对方。\u003C\u002Fli\u003E\n\u003Cli\u003E接收端收到后，回传一个带有 SYN\u002FACK 标志的数据包以示传达确认信息。\u003C\u002Fli\u003E\n\u003Cli\u003E最后，发送端再回传一个带 ACK 标志的数据包，代表“握手”结束。若在握手过程中某个阶段莫名中断，TCP 协议会再次以相同的顺序发送相同的数据包。\u003Cbr\u003E\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Ftcp-3-call.jpg\" width=\"420px\" height=\"280px\"\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E除了上述三次握手，TCP 协议还有其他各种手段来保证通信的可靠性\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E网络层【IP协议：负责传输、ARP协议：地址解析协议】\n\u003Cul\u003E\n\u003Cli\u003E增加作为通信目的地的 MAC 地址\u003C\u002Fli\u003E\n\u003Cli\u003EARP 是一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E数据链路层\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E服务器\n\u003Cul\u003E\n\u003Cli\u003E数据链路层接收，\b\b按序往上层发送，并把对应的首部消去，TCP按序重组请求报文，HTTP处理请求，返回响应\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E处理请求，返回响应内容\u003C\u002Fli\u003E\n\u003Cli\u003E↓\u003C\u002Fli\u003E\n\u003Cli\u003E浏览器得到资源内容\u002F报文，进行解析渲染\n\u003Cul\u003E\n\u003Cli\u003E检查HTML并构建DOM\n\u003Cul\u003E\n\u003Cli\u003E字节 -&gt; 字符串 -&gt; node -&gt; DOM\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E检查CSS并构建CSSOM【CSS Object Model，是一个建立在web页面上的 CSS 样式的映射】\n\u003Cul\u003E\n\u003Cli\u003E字节 -&gt; 字符串 -&gt; node -&gt; DOM\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EWeb浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）\n\u003Cul\u003E\n\u003Cli\u003E包含节点\b和节点样式信息\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E渲染引擎\b根据 RenderTree 开始渲染和展示\n\u003Cul\u003E\n\u003Cli\u003E布局（回流）：确定节点位置和大小\u003C\u002Fli\u003E\n\u003Cli\u003E绘制：调用CPU，合成图层，显示与屏幕\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E遇到 script、link 会阻塞\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E断开连接，四次挥手👋\u003Cbr\u003E\n\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fhttp-tcp.jpg\" width=\"450px\" height=\"450px\"\u003E\n\u003Cbr\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Chr\u003E\n\u003Cbr\u003E\n\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fall.jpg\" width=\"500px\" height=\"700px\"\u003E\n\u003Ch3\u003E协议对应OSI七层模型位置：\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E物理层\u003C\u002Fli\u003E\n\u003Cli\u003E数据链路层\u003C\u002Fli\u003E\n\u003Cli\u003E网络层\n\u003Cul\u003E\n\u003Cli\u003EIP\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E传输层\n\u003Cul\u003E\n\u003Cli\u003ETCP\u003C\u002Fli\u003E\n\u003Cli\u003EUDP(User Data Protocal): 用户数据报协议\n\u003Cul\u003E\n\u003Cli\u003E不可靠，可能丢包而且包的顺序性也不能保证\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E会话层\u003C\u002Fli\u003E\n\u003Cli\u003E表示层\u003C\u002Fli\u003E\n\u003Cli\u003E应用层\n\u003Cul\u003E\n\u003Cli\u003Ehttp\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E重绘、回流有什么区别？\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E网页生成时，至少会渲染一次，在用户\b访问过程中，还会不断重新渲染\u003C\u002Fli\u003E\n\u003Cli\u003E重绘是当节点需要更改外观而不影响布局，如：color的改变\u003C\u002Fli\u003E\n\u003Cli\u003E\b回流是布局或者几何属性的改变，如：width、height的改变\u003C\u002Fli\u003E\n\u003Cli\u003E\b回流必定发生重绘，重绘未必引发回流\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003Easync 和 defer 有什么区别？\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003Easync 如果已经加载好，就会开始执行\u003C\u002Fli\u003E\n\u003Cli\u003E\bdefer 不阻塞 HTML 的解析，HTML解析完后，再执行\u003C\u002Fli\u003E\n\u003Cli\u003E加载多个JS脚本，async无序加载，而defer有序加载\n\u003Cul\u003E\n\u003Cli\u003E如加载 谷歌统计代码，使用async\u003C\u002Fli\u003E\n\u003Cli\u003E加载 JS相互依赖代码，使用defer，如 jQuery.js、jQuery-plugin.js\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E为什么操作DOM慢？\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E相当于不同线程之间的通信\u003C\u002Fli\u003E\n\u003Cli\u003E可能带来重绘、回流\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E强缓存和协商缓存\u003C\u002Fh3\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E强缓存是不经过服务器的, 协商缓存是经过服务器的\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E强缓存可能从本地内存获取，也可能从本地磁盘内读取\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cul\u003E\n\u003Cli\u003E强缓存相关字段(Expires(响应头), Cache-Control(响应头)),\n\u003Cblockquote\u003E\n\u003Cp\u003ECache-Control优先级大于Expires\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cul\u003E\n\u003Cli\u003ECache-Control\n\u003Cul\u003E\n\u003Cli\u003Eno-cache：强制向源服务器再次验证\u003C\u002Fli\u003E\n\u003Cli\u003Eno-store：不缓存请求或响应的任何内容，\u003Cstrong\u003E这才是真的’no-cache’不缓存\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E…\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E协商缓存相关字段(Last-Modified(响应头), If-Modified-Since(请求头), Etag(响应头), If-None-Match(请求头))\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EHTTP 缓存机制流程图:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fcache.jpeg\" alt=\"catch\"\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E为什么建立连接是三次握手，而关闭连接却是四次挥手呢？\u003C\u002Fh3\u003E\n\u003Chr\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fbook.douban.com\u002Fsubject\u002F25863515\u002F\"\u003E参考-图解HTTP\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fvarvy.com\u002Fperformance\u002Fcssom.html\"\u003E参考-Introduction to the CSS Object Model\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5c24d736f265da614b120d4a\"\u003E参考-掘金文章-深入浅出浏览器渲染原理\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fjuejin.im\u002Fpost\u002F5a0444d45188255ea95b66bc\"\u003E参考-掘金文章-TCP的三次握手四次挥手\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fsegmentfault.com\u002Fa\u002F1190000017184701\"\u003E参考-segmentfault文章-从URL输入到页面展现到底发生什么？\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FMuYunyun\u002Fblog\u002Fblob\u002Fmaster\u002FBasicSkill\u002Fhttp\u002Fhttp.md\"\u003E参考-github.com\u002FMuYunyun\u002Fblog\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EARP协议相关资料：\u003Ca href=\"https:\u002F\u002Fbaike.baidu.com\u002Fitem\u002FARP\u002F609343\"\u003EARP协议百度百科\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",__v:a},{_id:"5c4672b79f894d0f47f5f53c",meta:{createDate:f,updateDate:f},tags:[g],title:"已知年月，求该月共多少天？",content:"\u003Cp\u003E在写日历组件时，曾遇到 \u003Cstrong\u003E已知年月，求该月共多少天？\u003C\u002Fstrong\u003E 这样的需求。\u003C\u002Fp\u003E\n\u003Cp\u003E最开始思路会是：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E先判断该年份是否是闰年，来处理 2 月份情况，闰年 2 月共 29 天，非闰年 2 月共 28 天\u003C\u002Fli\u003E\n\u003Cli\u003E再判断其他月份，如 1 月共 31 天，4 月共 30 天\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E代码就不一一列出了，思路代码啥的没啥问题。\u003C\u002Fp\u003E\n\u003Cp\u003E这里其实有种更简便的方法，借助 \u003Ccode\u003EDate\u003C\u002Fcode\u003E API 处理日期溢出时，会自动往后推延响应时间的规则，直接上代码：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F month 值需对应实际月份减一，如实际 2 月，month 为 1，实际 3 月，month 为 2\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eyear\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E month\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E32\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EDate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eyear\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E month\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E32\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetDate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E验证下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 求闰年的 2 月份总天数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 29\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 求非闰年的 2 月份总天数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2001\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 28\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 求 1 月份总天数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 31\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2001\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 31\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 求 4 月份总天数\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2000\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 30\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EgetMonthCountDay\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2001\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F 30\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",__v:a},{_id:"5c45d9fe9f894d0f47f5f53b",meta:{createDate:"2019-01-21 22:41:02",updateDate:"2019-01-21 22:43:24"},tags:["css"],title:"CSS里的BFC",content:"\u003Ch2\u003EBFC概念\u003C\u002Fh2\u003E\n\u003Cp\u003E块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。是CSS2.1规范定义的内容。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E下列方式会创建块格式化上下文：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E根元素或包含根元素的元素\u003C\u002Fli\u003E\n\u003Cli\u003E浮动元素（元素的 \u003Ccode\u003Efloat\u003C\u002Fcode\u003E 不是 \u003Ccode\u003Enone\u003C\u002Fcode\u003E）\u003C\u002Fli\u003E\n\u003Cli\u003E绝对定位元素（元素的 \u003Ccode\u003Eposition\u003C\u002Fcode\u003E 为 \u003Ccode\u003Eabsolute\u003C\u002Fcode\u003E 或 \u003Ccode\u003Efixed\u003C\u002Fcode\u003E）\u003C\u002Fli\u003E\n\u003Cli\u003E行内块元素（元素的 \u003Ccode\u003Edisplay\u003C\u002Fcode\u003E 为 \u003Ccode\u003Einline-block\u003C\u002Fcode\u003E）\u003C\u002Fli\u003E\n\u003Cli\u003E表格单元格（元素的 \u003Ccode\u003Edisplay\u003C\u002Fcode\u003E为 \u003Ccode\u003Etable-cell\u003C\u002Fcode\u003E，HTML表格单元格默认为该值）\u003C\u002Fli\u003E\n\u003Cli\u003E表格标题（元素的 \u003Ccode\u003Edisplay\u003C\u002Fcode\u003E 为 \u003Ccode\u003Etable-caption\u003C\u002Fcode\u003E，HTML表格标题默认为该值）\u003C\u002Fli\u003E\n\u003Cli\u003E匿名表格单元格元素（元素的 \u003Ccode\u003Edisplay\u003C\u002Fcode\u003E为 \u003Ccode\u003Etable\u003C\u002Fcode\u003E、\u003Ccode\u003Etable-row\u003C\u002Fcode\u003E、 \u003Ccode\u003Etable-row-group\u003C\u002Fcode\u003E、t\u003Ccode\u003Eable-header-group\u003C\u002Fcode\u003E、\u003Ccode\u003Etable-footer-group\u003C\u002Fcode\u003E（分别是HTML table、row、tbody、thead、tfoot的默认属性）或 \u003Ccode\u003Einline-table\u003C\u002Fcode\u003E）\u003C\u002Fli\u003E\n\u003Cli\u003Eoverflow 值不为 \u003Ccode\u003Evisible\u003C\u002Fcode\u003E 的块元素\u003C\u002Fli\u003E\n\u003Cli\u003Edisplay 值为 \u003Ccode\u003Eflow-root\u003C\u002Fcode\u003E 的元素\u003C\u002Fli\u003E\n\u003Cli\u003Econtain 值为 \u003Ccode\u003Elayout\u003C\u002Fcode\u003E、\u003Ccode\u003Econtent\u003C\u002Fcode\u003E或 \u003Ccode\u003Estrict\u003C\u002Fcode\u003E 的元素\u003C\u002Fli\u003E\n\u003Cli\u003E弹性元素（\u003Ccode\u003Edisplay\u003C\u002Fcode\u003E为 \u003Ccode\u003Eflex\u003C\u002Fcode\u003E 或 \u003Ccode\u003Einline-flex\u003C\u002Fcode\u003E元素的直接子元素）\u003C\u002Fli\u003E\n\u003Cli\u003E网格元素（\u003Ccode\u003Edisplay为\u003C\u002Fcode\u003E \u003Ccode\u003Egrid\u003C\u002Fcode\u003E 或 \u003Ccode\u003Einline-grid\u003C\u002Fcode\u003E 元素的直接子元素）\u003C\u002Fli\u003E\n\u003Cli\u003E多列容器（元素的 \u003Ccode\u003Ecolumn-count\u003C\u002Fcode\u003E 或 \u003Ccode\u003Ecolumn-width\u003C\u002Fcode\u003E 不为 \u003Ccode\u003Eauto\u003C\u002Fcode\u003E，包括 \u003Ccode\u003Ecolumn-count\u003C\u002Fcode\u003E 为 1）\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ecolumn-span\u003C\u002Fcode\u003E 为 \u003Ccode\u003Eall\u003C\u002Fcode\u003E 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cem\u003E块格式化上下文包含创建它的元素内部的所有内容.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E根元素即为一个BFC\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3\u003E特性\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E属于同一个BFC的两个相邻Box的margin会发生重叠，与方向无关，仅保留较大的margin值\u003C\u002Fli\u003E\n\u003Cli\u003E消除与浮动元素的重叠\u003C\u002Fli\u003E\n\u003Cli\u003E可制造内部浮动（计算BFC的高度时，浮动子元素也参与计算）\u003C\u002Fli\u003E\n\u003Cli\u003E每个元素的margin-left，与包含块border-left相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此（见demo里的part3）。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003Edemo\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fcodepen.io\u002Ftanxchen\u002Fpen\u002FOdLbwq\"\u003Edemo\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E总结\u003C\u002Fh3\u003E\n\u003Cp\u003EBFC是文档内元素显示的一种形式，概念有点抽象,可想像成在文档里为一个密闭的空间，与外部进行了隔离。在默认情况下，根元素即为BFC。所以在根元素内部的元素垂直方向会产生margin重合，浮动元素会产生元素重叠，BFC可消除元素内的子\b元素浮动产生的不包含情况等特性。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FGuide\u002FCSS\u002FBlock_formatting_context\"\u003E参考MDN链接\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",__v:h},{_id:"5c376a7c9f894d0f47f5f53a",meta:{createDate:"2019-01-10 23:53:32",updateDate:"2019-01-15 17:03:36"},tags:[g],title:"简单实现浅拷贝与深拷贝",content:"\u003Ch3\u003E深浅拷贝区别\u003C\u002Fh3\u003E\n\u003Cp\u003E浅拷贝只复制第一层可枚举的属性值，深拷贝对每一层里的可枚举的属性值都进行复制。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch3\u003E简单实现浅拷贝\u003C\u002Fh3\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ecopy\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esource\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E source \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'object'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E source\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E copy \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Array\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n  Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ekeys\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ekey\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    copy\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E source\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E copy\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E浅拷贝的实现有\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003EObject.assign\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E...\u003C\u002Fcode\u003E展开语法\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003EArray.prototype.slice()\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E数组的\u003Ccode\u003Econcat\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch3\u003E简单实现深拷贝\u003C\u002Fh3\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EdeepCopy\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Esource\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E source \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'object'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E source\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E copy \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Array\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\n  Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ekeys\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Ekey\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    copy\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EdeepCopy\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Esource\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E copy\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003EJSON.parse(JSON.stringify(source))\u003C\u002Fcode\u003E 是对深拷贝的实现\u003C\u002Fp\u003E\n\u003Cp\u003E但存在如下问题：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E拷贝JSON中不支持的类型会有问题，如\u003Ccode\u003EDate\u003C\u002Fcode\u003E类型拷贝时，会转化为带T格式的日期字符串\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",__v:a},{_id:"5c2a1441b042777d45a5859d",meta:{createDate:"2018-12-31 21:06:09",updateDate:"2019-05-05 14:20:49"},tags:[e],title:"Centos6.8下安装jenkins",content:"\u003Cp\u003E本博客使用了jenkins进行持续集成，在配置腾讯云时，顺便记录下配置过程。安装jenkins的方式\u003Ca href=\"https:\u002F\u002Fjenkins.io\u002Fdoc\u002Fbook\u002Finstalling\u002F\"\u003E官网\u003C\u002Fa\u003E 给出了多种，这里使用了war包文件方式安装。\u003C\u002Fp\u003E\n\u003Ch2\u003E一、安装前提\u003C\u002Fh2\u003E\n\u003Ch3\u003E1、安装java1.8版本\u003C\u002Fh3\u003E\n\u003Cp\u003EJenkins 依赖于1.8版本的java。\u003C\u002Fp\u003E\n\u003Cp\u003E使用yum，安装java1.8，执行\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Eyum install -y java-1.8.0-openjdk.x86_64\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E安装以后执行 \u003Ccode\u003Ejava -version\u003C\u002Fcode\u003E 看下是否安装成功。\u003C\u002Fp\u003E\n\u003Ch3\u003E2、添加环境变量\u003C\u002Fh3\u003E\n\u003Cp\u003E接着在 \u002Fetc\u002Fprofile文件里添加java的环境变量\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Evim  \u002Fetc\u002Fprofile\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在最后添加如下代码：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003EJAVA_HOME=\u002Fusr\u002Fjava\u002Fjdk1.8.0_74\nJRE_HOME=\u002Fusr\u002Fjava\u002Fjdk1.8.0_74\u002Fjre\nPATH=$PATH:$JAVA_HOME\u002Fbin:$JRE_HOME\u002Fbin\nCLASSPATH=:$JAVA_HOME\u002Flib\u002Fdt.jar:$JAVA_HOME\u002Flib\u002Ftools.jar:$JRE_HOME\u002Flib\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E执行修改生效命令：\u003Ccode\u003Esource \u002Fetc\u002Fprofile\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E查看是否生效命令：\u003Ccode\u003Eecho $PATH\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003E二、jenkins相关\u003C\u002Fh2\u003E\n\u003Ch3\u003E1、下载jenkins war包\u003C\u002Fh3\u003E\n\u003Cp\u003Ejava安装的准备工作做完了，接着根据\u003Ca href=\"https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002F\"\u003E官网\u003C\u002Fa\u003E提供的Centos下的jenkins下载方式，执行如下命令：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Esudo wget -O \u002Fetc\u002Fyum.repos.d\u002Fjenkins.repo https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002Fjenkins.repo\nsudo rpm --import https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002Fjenkins.io.key\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E找到刚下载的安装包，可执行如下命令：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Erpm -ql jenkins\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E结果如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003E[root@VM_160_98_centos ~]# rpm -ql jenkins\n\u002Fetc\u002Finit.d\u002Fjenkins\n\u002Fetc\u002Flogrotate.d\u002Fjenkins\n\u002Fetc\u002Fsysconfig\u002Fjenkins\n\u002Fusr\u002Flib\u002Fjenkins\n\u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war\n\u002Fusr\u002Fsbin\u002Frcjenkins\n\u002Fvar\u002Fcache\u002Fjenkins\n\u002Fvar\u002Flib\u002Fjenkins\n\u002Fvar\u002Flog\u002Fjenkins\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003E\u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war\u003C\u002Fcode\u003E就是war包的位置了。\u003C\u002Fp\u003E\n\u003Ch3\u003E2、默认启动端口\u003C\u002Fh3\u003E\n\u003Cp\u003E这里先顺便修改下jenkins的8080默认启动端口。(查看端口使用情况命令：\u003Ccode\u003Enetstat -ntlp\u003C\u002Fcode\u003E)\u003C\u002Fp\u003E\n\u003Cp\u003E修改端口的文件命令为：\u003Ccode\u003Evim \u002Fetc\u002Fsysconfig\u002Fjenkins\u003C\u002Fcode\u003E，找到里面的\u003Ccode\u003EJENKINS_PORT=&quot;8080&quot;\u003C\u002Fcode\u003E，我这里改为了5555，没需求可不修改。\u003C\u002Fp\u003E\n\u003Ch3\u003E3、运行jenkins\u003C\u002Fh3\u003E\n\u003Cp\u003E运行jenkins命令且退出命令行不影响程序执行，运行如下命令：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ejava -jar \u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war --httpPort=5555 &amp;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E其中 \u003Ccode\u003E&amp;\u003C\u002Fcode\u003E 符号使得退出命令行不影响程序执行。\u003C\u002Fp\u003E\n\u003Ch3\u003E4、添加nginx 代理端口设置\u003C\u002Fh3\u003E\n\u003Cp\u003E接着在nginx里配置代理到5555端口，使得外网能访问。\u003C\u002Fp\u003E\n\u003Cp\u003E接着到服务器后台管理（我服务器是腾讯云）添加子域名和在安全组里添加5555端口的入站规则。\u003C\u002Fp\u003E\n\u003Cp\u003E这样jenkins就算安装完成了。\u003Ca href=\"http:\u002F\u002Fjenkins.tanxchen.com\"\u003Ehttp:\u002F\u002Fjenkins.tanxchen.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003E附：Jenkins 默认插件\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fjenkins-default-plugin-ls.jpg\" alt=\"默认插件\"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EFloders Plugin\u003C\u002Fli\u003E\n\u003Cli\u003EOWASP markup formatter plugin\u003C\u002Fli\u003E\n\u003Cli\u003EBuild timeout plugin\u003C\u002Fli\u003E\n\u003Cli\u003ECredentials binding plugin\u003C\u002Fli\u003E\n\u003Cli\u003Etimestamper\u003C\u002Fli\u003E\n\u003Cli\u003EWorkspace cleanup plugin\u003C\u002Fli\u003E\n\u003Cli\u003Eant plugin\u003C\u002Fli\u003E\n\u003Cli\u003EGradle plugin\u003C\u002Fli\u003E\n\u003Cli\u003Epipeline\u003C\u002Fli\u003E\n\u003Cli\u003EGithub organization floder plugin\u003C\u002Fli\u003E\n\u003Cli\u003Epipeline stage view plugin\u003C\u002Fli\u003E\n\u003Cli\u003EGit plugin\u003C\u002Fli\u003E\n\u003Cli\u003Esubversion plugin\u003C\u002Fli\u003E\n\u003Cli\u003ESSH slaves plugin\u003C\u002Fli\u003E\n\u003Cli\u003EMatrix authorization stragegy plugin\u003C\u002Fli\u003E\n\u003Cli\u003EPAM authentication plugin\u003C\u002Fli\u003E\n\u003Cli\u003ELDAP plugin\u003C\u002Fli\u003E\n\u003Cli\u003EEmail extension plugin\u003C\u002Fli\u003E\n\u003Cli\u003EMailer plugin\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E共19个默认插件\u003C\u002Fp\u003E\n",__v:h}]}],fetch:{},mutations:void 0}}(0,"vue","2019-05-16 22:51:56","2019-05-06 16:54:24","笔记","2019-01-22 09:32:39","javascript",1)));