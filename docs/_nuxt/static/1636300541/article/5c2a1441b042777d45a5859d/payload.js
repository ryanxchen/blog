__NUXT_JSONP__("/article/5c2a1441b042777d45a5859d", {data:[{article:{_id:"5c2a1441b042777d45a5859d",meta:{createDate:"2018-12-31 21:06:09",updateDate:"2019-05-05 14:20:49"},tags:["笔记"],title:"Centos6.8下安装jenkins",content:"\u003Cp\u003E本博客使用了jenkins进行持续集成，在配置腾讯云时，顺便记录下配置过程。安装jenkins的方式\u003Ca href=\"https:\u002F\u002Fjenkins.io\u002Fdoc\u002Fbook\u002Finstalling\u002F\"\u003E官网\u003C\u002Fa\u003E 给出了多种，这里使用了war包文件方式安装。\u003C\u002Fp\u003E\n\u003Ch2\u003E一、安装前提\u003C\u002Fh2\u003E\n\u003Ch3\u003E1、安装java1.8版本\u003C\u002Fh3\u003E\n\u003Cp\u003EJenkins 依赖于1.8版本的java。\u003C\u002Fp\u003E\n\u003Cp\u003E使用yum，安装java1.8，执行\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Eyum install -y java-1.8.0-openjdk.x86_64\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E安装以后执行 \u003Ccode\u003Ejava -version\u003C\u002Fcode\u003E 看下是否安装成功。\u003C\u002Fp\u003E\n\u003Ch3\u003E2、添加环境变量\u003C\u002Fh3\u003E\n\u003Cp\u003E接着在 \u002Fetc\u002Fprofile文件里添加java的环境变量\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Evim  \u002Fetc\u002Fprofile\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在最后添加如下代码：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003EJAVA_HOME=\u002Fusr\u002Fjava\u002Fjdk1.8.0_74\nJRE_HOME=\u002Fusr\u002Fjava\u002Fjdk1.8.0_74\u002Fjre\nPATH=$PATH:$JAVA_HOME\u002Fbin:$JRE_HOME\u002Fbin\nCLASSPATH=:$JAVA_HOME\u002Flib\u002Fdt.jar:$JAVA_HOME\u002Flib\u002Ftools.jar:$JRE_HOME\u002Flib\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E执行修改生效命令：\u003Ccode\u003Esource \u002Fetc\u002Fprofile\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E查看是否生效命令：\u003Ccode\u003Eecho $PATH\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003E二、jenkins相关\u003C\u002Fh2\u003E\n\u003Ch3\u003E1、下载jenkins war包\u003C\u002Fh3\u003E\n\u003Cp\u003Ejava安装的准备工作做完了，接着根据\u003Ca href=\"https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002F\"\u003E官网\u003C\u002Fa\u003E提供的Centos下的jenkins下载方式，执行如下命令：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003Esudo wget -O \u002Fetc\u002Fyum.repos.d\u002Fjenkins.repo https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002Fjenkins.repo\nsudo rpm --import https:\u002F\u002Fpkg.jenkins.io\u002Fredhat\u002Fjenkins.io.key\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E找到刚下载的安装包，可执行如下命令：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Erpm -ql jenkins\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E结果如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-text\"\u003E\u003Ccode\u003E[root@VM_160_98_centos ~]# rpm -ql jenkins\n\u002Fetc\u002Finit.d\u002Fjenkins\n\u002Fetc\u002Flogrotate.d\u002Fjenkins\n\u002Fetc\u002Fsysconfig\u002Fjenkins\n\u002Fusr\u002Flib\u002Fjenkins\n\u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war\n\u002Fusr\u002Fsbin\u002Frcjenkins\n\u002Fvar\u002Fcache\u002Fjenkins\n\u002Fvar\u002Flib\u002Fjenkins\n\u002Fvar\u002Flog\u002Fjenkins\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003E\u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war\u003C\u002Fcode\u003E就是war包的位置了。\u003C\u002Fp\u003E\n\u003Ch3\u003E2、默认启动端口\u003C\u002Fh3\u003E\n\u003Cp\u003E这里先顺便修改下jenkins的8080默认启动端口。(查看端口使用情况命令：\u003Ccode\u003Enetstat -ntlp\u003C\u002Fcode\u003E)\u003C\u002Fp\u003E\n\u003Cp\u003E修改端口的文件命令为：\u003Ccode\u003Evim \u002Fetc\u002Fsysconfig\u002Fjenkins\u003C\u002Fcode\u003E，找到里面的\u003Ccode\u003EJENKINS_PORT=&quot;8080&quot;\u003C\u002Fcode\u003E，我这里改为了5555，没需求可不修改。\u003C\u002Fp\u003E\n\u003Ch3\u003E3、运行jenkins\u003C\u002Fh3\u003E\n\u003Cp\u003E运行jenkins命令且退出命令行不影响程序执行，运行如下命令：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ejava -jar \u002Fusr\u002Flib\u002Fjenkins\u002Fjenkins.war --httpPort=5555 &amp;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E其中 \u003Ccode\u003E&amp;\u003C\u002Fcode\u003E 符号使得退出命令行不影响程序执行。\u003C\u002Fp\u003E\n\u003Ch3\u003E4、添加nginx 代理端口设置\u003C\u002Fh3\u003E\n\u003Cp\u003E接着在nginx里配置代理到5555端口，使得外网能访问。\u003C\u002Fp\u003E\n\u003Cp\u003E接着到服务器后台管理（我服务器是腾讯云）添加子域名和在安全组里添加5555端口的入站规则。\u003C\u002Fp\u003E\n\u003Cp\u003E这样jenkins就算安装完成了。\u003Ca href=\"http:\u002F\u002Fjenkins.tanxchen.com\"\u003Ehttp:\u002F\u002Fjenkins.tanxchen.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003E附：Jenkins 默认插件\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fgitee.com\u002Ftanxchen\u002Fimg\u002Fraw\u002Fmaster\u002Fblog\u002Fjenkins-default-plugin-ls.jpg\" alt=\"默认插件\"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EFloders Plugin\u003C\u002Fli\u003E\n\u003Cli\u003EOWASP markup formatter plugin\u003C\u002Fli\u003E\n\u003Cli\u003EBuild timeout plugin\u003C\u002Fli\u003E\n\u003Cli\u003ECredentials binding plugin\u003C\u002Fli\u003E\n\u003Cli\u003Etimestamper\u003C\u002Fli\u003E\n\u003Cli\u003EWorkspace cleanup plugin\u003C\u002Fli\u003E\n\u003Cli\u003Eant plugin\u003C\u002Fli\u003E\n\u003Cli\u003EGradle plugin\u003C\u002Fli\u003E\n\u003Cli\u003Epipeline\u003C\u002Fli\u003E\n\u003Cli\u003EGithub organization floder plugin\u003C\u002Fli\u003E\n\u003Cli\u003Epipeline stage view plugin\u003C\u002Fli\u003E\n\u003Cli\u003EGit plugin\u003C\u002Fli\u003E\n\u003Cli\u003Esubversion plugin\u003C\u002Fli\u003E\n\u003Cli\u003ESSH slaves plugin\u003C\u002Fli\u003E\n\u003Cli\u003EMatrix authorization stragegy plugin\u003C\u002Fli\u003E\n\u003Cli\u003EPAM authentication plugin\u003C\u002Fli\u003E\n\u003Cli\u003ELDAP plugin\u003C\u002Fli\u003E\n\u003Cli\u003EEmail extension plugin\u003C\u002Fli\u003E\n\u003Cli\u003EMailer plugin\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E共19个默认插件\u003C\u002Fp\u003E\n",__v:1}}],fetch:{},mutations:void 0});