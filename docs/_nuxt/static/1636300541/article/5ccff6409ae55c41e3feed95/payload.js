__NUXT_JSONP__("/article/5ccff6409ae55c41e3feed95", (function(a){return {data:[{article:{_id:"5ccff6409ae55c41e3feed95",meta:{createDate:a,updateDate:a},tags:["vue"],title:"Vuex源码分析",content:"\u003Cp\u003EVuex是Vue的数据状态管理插件.将数据放在单例下的store里，对数据进行监控管理.\u003C\u002Fp\u003E\n\u003Ch3\u003E引入、安装阶段，从入口 index.js开始\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Store\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  install\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  version\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'__VERSION__'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapMutations\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapGetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mapActions\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  createNamespacedHelpers\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E导出了 Store 类和一些辅助map开头的函数。\n最初在项目里使用Vuex时，\u003Ccode\u003EVue.use(Vuex)\u003C\u002Fcode\u003E里便是调用了\u003Ccode\u003Einstall\u003C\u002Fcode\u003E方法。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E Vue\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始install阶段，Vue.use(Vuex)会调用install方法\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Einstall\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E_Vue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F Vue为store里定义，_Vue为调用install时传入的Vue\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 防止重复install\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E _Vue \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E Vue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token string\"\u003E'[vuex] already installed. Vue.use(Vuex) should be called only once.'\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  Vue \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E _Vue\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F applyMixin函数作用：将store注入到子组件，子组件可通过this.$store访问store\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003EapplyMixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EVue\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Estore.js里导出了\u003Ccode\u003Einstall\u003C\u002Fcode\u003E方法。在store.js开头定义局部 Vue 变量，用于判断是否已经装载和减少全局作用域查找。\n这里调用\u003Ccode\u003EapplyMixin\u003C\u002Fcode\u003E方法，它将store注入到子组件，子组件可通过this.$store访问store\n\u003Ccode\u003E\u002F\u002F applyMixin.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eversion \u003Cspan class=\"token operator\"\u003E\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Emixin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E beforeCreate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E vuexInit \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EapplyMixin里对 vue 1.0 和 2.0 版本进行了判断，2.0下在\u003Ccode\u003EbeforeCreate\u003C\u002Fcode\u003E阶段注入\u003Ccode\u003Estore\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 子组件可以通过this.$store来访问store\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EvuexInit\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E options \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$options\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 注入store\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始时，在根组件上，调用者会传入store，所以会进入if逻辑\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F options上的store可以为 function，\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 这类似于 vue 里的 data return 的是个 function，防止多个 store下，里面的数据被共享\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'function'\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Estore\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estore\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 在子组件上，初始化时未传入store，则从父组件中获取store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 公用了一份初始根组件时传入的全局的store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003Enew Store实例化阶段\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E  \u003Cspan class=\"token comment\"\u003E\u002F\u002F plugins为外部传入的插件\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F strict为默认不开启严格模式（严格模式：只能在mutation里进行数据更改，在action等其他位置进行数据更改会抛出错误）\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    plugins \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    strict \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 定义store 内部状态\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 用于判断是否在commit环节的flag，保证只在mutation环境改变state\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_committing \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F actions操作对象\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 发布订阅模式下的订阅函数集合\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actionSubscribers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F mutations操作对象\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 封装后的getters集合对象\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_wrappedGetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F**\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E格式化 options，也是该源码阅读的核心重点，\u003C\u002Fli\u003E\n\u003Cli\u003E在非模块模式（普通用法传入options）或 在按模块开发方式传入store时，存储处理过的modules\u003C\u002Fli\u003E\n\u003Cli\u003Ethis._modules = {\u003C\u002Fli\u003E\n\u003Cli\u003Eroot: {\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003Econtext: {dispatch: ƒ, commit: ƒ},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003Eruntime: false,\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003Estate: {…},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003E_children: {},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003E_rawModule: {state: {…}, actions: {…}, mutations: {…}, plugins: Array(1)},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cpre\u003E\u003Ccode\u003Enamespaced: false\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E},\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eproto\u003C\u002Fstrong\u003E: {\u003C\u002Fli\u003E\n\u003Cli\u003Eget: ƒ (path)\u003C\u002Fli\u003E\n\u003Cli\u003EgetNamespace: ƒ getNamespace(path)\u003C\u002Fli\u003E\n\u003Cli\u003Eregister: ƒ register(path, rawModule, runtime)\u003C\u002Fli\u003E\n\u003Cli\u003Eunregister: ƒ unregister(path)\u003C\u002Fli\u003E\n\u003Cli\u003Eupdate: ƒ update$1(rawRootModule)\u003C\u002Fli\u003E\n\u003Cli\u003Econstructor: ƒ ModuleCollection(rawRootModule)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eproto\u003C\u002Fstrong\u003E: {…}\u003C\u002Fli\u003E\n\u003Cli\u003E}\u003C\u002Fli\u003E\n\u003Cli\u003E}\n*\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModuleCollection\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eoptions\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 模块命名空间map\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modulesNamespaceMap \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 发布订阅模式下的订阅函数集合\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_subscribers \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F vue实例，用到watch监视变化功能\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_watcherVM \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F …\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F initialize the store vm, which is responsible for the reactivity\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F (also registers _wrappedGetters as computed properties)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EresetStoreVM\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 调用传入的各种插件\u003C\u002Fspan\u003E\nplugins\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEach\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eplugin\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eplugin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E useDevtools \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eundefined\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E options\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E Vue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econfig\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edevtools\n\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EuseDevtools\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EdevtoolPlugin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E在 \u003Ccode\u003Econstructor\u003C\u002Fcode\u003E 里主要操作为： 格式化modules，安装 module，初始化 store vm, 安装 plugins\u003C\u002Fp\u003E\n\u003Ch3\u003E格式化modules，即 \u003Ccode\u003Ethis._modules = new ModuleCollection(options)\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cp\u003E由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\u003C\u002Fp\u003E\n\u003Cp\u003E为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。\n每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleA \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  mutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  actions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  getters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E...\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cp\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleB \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\nstate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E…\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\nmutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E…\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\nactions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E…\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E store \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVuex\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EStore\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\nstate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E…\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\nmodules\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\na\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E moduleA\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\nb\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E moduleB\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E代码被分割到 \u003Ccode\u003E.\u002Fmodule\u002Fmodule-collection\u003C\u002Fcode\u003E 文件夹下。\n初始化时，执行 \u003Ccode\u003Eregister\u003C\u002Fcode\u003E 方法\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawRootModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eregister 接收3个参数\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epath：路径，模块tree的路径\u003C\u002Fli\u003E\n\u003Cli\u003ErawModule：最初 \u003Ccode\u003Enew Store\u003C\u002Fcode\u003E 时传入的 \u003Ccode\u003Eoptions\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eruntime：是否是运行时创建的模块,在初始化根模块时为 false， 其他情况为 true，理解为 初始化时的 flag\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E如初始化 register 时，参数为：\u003Ccode\u003Epath: [], rawModule: options, runtime: false\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epath\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F path: [], rawModule: options, runtime: false\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eprocess\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenv\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token constant\"\u003ENODE_ENV\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'production'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 对构造器传入的options的getters、mutations、actions进行dev环境的格式校验\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token comment\"\u003E\u002F\u002F 非预期的格式会抛出错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EassertRawModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始化module\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E newModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 第一次初始化时，执行if代码块，path为[]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E newModule\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 获取当前module的parent\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E parent \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F 添加child\u003C\u002Fspan\u003E\nparent\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EaddChild\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E newModule\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 递归注册嵌套的module\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emodules\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emodules\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003ErawChildModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Econcat\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rawChildModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eregister 里的逻辑大致为\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E校验传入的options格式，非预期的格式会抛出错误\u003C\u002Fli\u003E\n\u003Cli\u003E实例化 \u003Ccode\u003EModule\u003C\u002Fcode\u003E，初始化时 模块 tree 的根即为 root，之后 addChild 添加的子模块 即会放入到 root._children 里，逐级对包含的所以模块进行递归 register，以形式 模块 tree\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eroot格式如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Eroot\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  context\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Edispatch\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E ƒ\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E commit\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E ƒ\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  runtime\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  _children\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  _rawModule\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Estate\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E actions\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E…\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E plugins\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EArray\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n  namespaced\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Efalse\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003E初始化module\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 初始化module\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E newModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EModule 定义在 \u003Ccode\u003E.\u002Fmodule\u002Fmodule.js\u003C\u002Fcode\u003E 里\u003C\u002Fp\u003E\n\u003Cp\u003E构造函数：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Econstructor\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003ErawModule\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E runtime\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F rawModule: options, runtime: false\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eruntime \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E runtime\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储module子项\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_children \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Object\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Enull\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储初始化时传入的原始options\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E rawModule\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E rawState \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 兼容module形式里state传入函数形式，类似 组件中的 data，总是return 一个Object，来防止对象被共享\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Etypeof\u003C\u002Fspan\u003E rawState \u003Cspan class=\"token operator\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E‘function’\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErawState\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E rawState\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E屡下 模块初始化 思路：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E对初始传入的 options 进行模块 实例化，\u003C\u002Fli\u003E\n\u003Cli\u003E里面包含了子模块的话 会被递归 放进 root._children 对象里，形成一颗 模块 tree，\u003C\u002Fli\u003E\n\u003Cli\u003E并且 通过 \u003Ccode\u003EforEachMutation\u003C\u002Fcode\u003E 包装函数等的类似方法，子模块在执行 action、mutation 方法时也只是执行的是子模块里对应的方法，\u003C\u002Fli\u003E\n\u003Cli\u003E每个模块的 _rawModule 即为 定义时 传入的 options\u003C\u002Fli\u003E\n\u003Cli\u003E每个模块的 state 即为 定义时 传入的 options.state\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E安装模块\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在模块被初始化定义后，通过 installModule 对 state, actions, mutations, getters 进行初始化处理。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F this, state(this._modules.root.state), [], this._modules.root\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F 是root时，path为[]\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E isRoot \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F  modules: {\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     a: moduleA,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F     b: moduleB\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F   }\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token comment\"\u003E\u002F\u002F modules.a 的命名空间为 'a\u002F'\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modules\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EgetNamespace\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 存储namespace对应的module于_modulesNamespaceMap\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Enamespaced\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_modulesNamespaceMap\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Enamespace\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E module\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 设置 state\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003EisRoot \u003Cspan class=\"token operator\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003Ehot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E parentState \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EgetNestedState\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003ErootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eslice\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E moduleName \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Epath\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Elength \u003Cspan class=\"token operator\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003E_withCommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\nVue\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eset\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EparentState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E moduleName\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E local \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E module\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Econtext \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EmakeLocalContext\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespace\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 拼接namespace，如：\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F modules: {\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F   account: {\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     namespaced: true,\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     state: { … }, \u002F\u002F 模块内的状态已经是嵌套的了，使用 \u003Ccode\u003Enamespaced\u003C\u002Fcode\u003E 属性不会对其产生影响\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     getters: {\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F       isAdmin () { … } \u002F\u002F -&gt; getters[‘account\u002FisAdmin’]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     },\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     actions: {\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F       login () { … } \u002F\u002F -&gt; dispatch(‘account\u002Flogin’)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     },\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     mutations: {\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F       login () { … } \u002F\u002F -&gt; commit(‘account\u002Flogin’)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F     }\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F   }\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F }\u003C\u002Fspan\u003E\nmodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n\u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachAction\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eaction\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E type \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E action\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eroot \u003Cspan class=\"token operator\"\u003E?\u003C\u002Fspan\u003E key \u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E handler \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E action\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ehandler \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E action\n\u003Cspan class=\"token function\"\u003EregisterAction\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Egetter\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n\u003Cspan class=\"token function\"\u003EregisterGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E getter\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 递归install子项\u003C\u002Fspan\u003E\nmodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachChild\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Echild\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EinstallModule\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E rootState\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E path\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Econcat\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E child\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Ch4\u003E分析下 registerMutation 的注册\u003C\u002Fh4\u003E\n\u003Cp\u003E在这里先通过 forEachMutation 方法, 传入对应的模块的 mutation 和 key，\nregisterMutation 里将我们项目里定义的 mutations 方法以 key-value 形式存入 _mutations 里，在传入的时候 将 state 作为第一参数，我们自己传入的为第二参数形式，这里使得如文档里所说一样形式使用：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\nmutations\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Eincrement\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    state\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecount \u003Cspan class=\"token operator\"\u003E+=\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eamount\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这里会对命名空间进行处理，假如模块 A 中有名为 add 的 mutation 函数，那么在注册过程中会变成 a\u002Fadd\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E相关 Mutation 注册代码：\n-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Emodule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E namespacedType \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E namespace \u003Cspan class=\"token operator\"\u003E+\u003C\u002Fspan\u003E key\n  \u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E namespacedType\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E mutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EforEachMutation\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Efn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emutations\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_rawModule\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Emutations\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E fn\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EregisterMutation\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E entry \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_mutations\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  entry\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EwrappedMutationHandler\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epayload\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\u003C\u002Fp\u003E\n\u003Ch4\u003EregisterAction 的注册\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EregisterAction\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E type\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E handler\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E local\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E entry \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_actions\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  entry\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EwrappedActionHandler\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Epayload\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E cb\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Elet\u003C\u002Fspan\u003E res \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      dispatch\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edispatch\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      commit\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecommit\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      getters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      rootGetters\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n      rootState\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E payload\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E cb\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EisPromise\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eres\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      res \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Promise\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eres\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_devtoolHook\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E res\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_devtoolHook\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Eemit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'vuex:error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E err\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Ethrow\u003C\u002Fspan\u003E err\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E res\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这里将 \u003Ccode\u003E{ dispatch commit getters state rootGetters rootState }\u003C\u002Fcode\u003E 作为第一参数，将自己dispatch 时传入的参数作为第二参数，所以有了文档里所说的书写形式：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 自己项目里的 actions.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EtoggleMenu\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E commit \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'TOGGLE_MENU'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F or\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EsetSidebarMenuList\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Econtext\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E userType\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  context\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'SET_SIDEBAR_MENU_LIST'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E userType\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EregisterAction 里 处理了 promise 情况，所以 store.dispatch 可以处理被触发的 action 的处理函数返回的 Promise，并且 store.dispatch 仍旧返回 Promise\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E所以我们可以这么来写：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Elogin\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Ecommit\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E user\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EPromise\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eresolve\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E reject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_request'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eaxios\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003Eurl\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'...'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E data\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E user\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E method\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'POST'\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eresp\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E token \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E resp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etoken\n        \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E user \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E resp\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edata\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Euser\n        localStorage\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EsetItem\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'token'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E token\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        axios\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Edefaults\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eheaders\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ecommon\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Authorization'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E token\n        \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_success'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E token\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E user\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Eresolve\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eresp\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ecommit\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'auth_error'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        localStorage\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EremoveItem\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'token'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token function\"\u003Ereject\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  methods\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token function\"\u003Eregister\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edispatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'register'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n        name\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ename\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n        password\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Epassword\n      \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$router\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'\u002F'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecatch\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Eerr\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eerr\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E将处理的请求提取到了vuex里，也使得页面里代码更加简洁了。只保留了业务逻辑。\u003C\u002Fp\u003E\n\u003Ch4\u003EregisterGetter 的注册\u003C\u002Fh4\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003ErawGetter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n  local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F local state\u003C\u002Fspan\u003E\n  local\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F local getters\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F root state\u003C\u002Fspan\u003E\n  store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters \u003Cspan class=\"token comment\"\u003E\u002F\u002F root getters\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Egetter 这里先处理了命名空间，然后这里接收 4 个参数。\n前面两个为模块内的 local state ，local getters，后两个参数为根节点上的内容 root state，root getters。\n当然，没使用模块形式的话，两者相同。\u003C\u002Fp\u003E\n\u003Ch3\u003EresetStoreVM(this, state)\u003C\u002Fh3\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003EresetStoreVM\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Estore\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E hot\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E oldVm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F bind store public getters\u003C\u002Fspan\u003E\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E wrappedGetters \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_wrappedGetters\n\u003Cspan class=\"token keyword\"\u003Econst\u003C\u002Fspan\u003E computed \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003EforEachValue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EwrappedGetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Efn\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F use computed to leverage its lazy-caching mechanism\u003C\u002Fspan\u003E\ncomputed\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Efn\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nObject\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003EdefineProperty\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E key\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function-variable function\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=&gt;\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ekey\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\nenumerable\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Etrue\u003C\u002Fspan\u003E \u003Cspan class=\"token comment\"\u003E\u002F\u002F for local getters\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F …\u003C\u002Fspan\u003E\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EVue\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\ndata\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n$$state\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E state\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\ncomputed\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token comment\"\u003E\u002F\u002F …\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EresetStoreVM 的工作是 实例化一个 vue 实例，并将 getters 里定义的方法 通过 Object.defineProperty 来进行绑定到 store.getters 上，\n并作为 computed 计算属性，在state变化时，getter 能响应式变化。\n在实际调用 即为如下关系：\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003E\u003Cspan class=\"token comment\"\u003E\u002F\u002F 这里使得vm.$store.state 取到 vm._data.$$state\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Eget\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Estate\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"token keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Estate \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\nstore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Egetters\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E store\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_vm\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E_data\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E$$state\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Ea\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EVuex 还有一些map开头的辅助函数，这些 handler 通过 hook 达到了简写的目的。\nVuex 本身是 Vue 的插件形式，其自身继续延续支持插件形式。\u003Ccode\u003EreplaceState\u003C\u002Fcode\u003E,\u003Ccode\u003Esubscribe\u003C\u002Fcode\u003E通常会在插件里用到。\u003C\u002Fp\u003E\n\u003Cpre class=\"language-js\"\u003E\u003Ccode\u003Estore\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Esubscribe\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token parameter\"\u003Emutation\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E state\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E=\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n  console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emutation\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Etype\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n  console\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Elog\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emutation\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Epayload\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",__v:0}}],fetch:{},mutations:void 0}}("2019-05-06 16:54:24")));